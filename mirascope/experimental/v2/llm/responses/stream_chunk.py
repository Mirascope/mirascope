"""The `StreamChunk` class for handling streamed chunks from LLM calls."""

from dataclasses import dataclass
from typing import Generic

from typing_extensions import TypeVar

from ..types import Dataclass
from .content import ResponseContent

T = TypeVar("T", bound=Dataclass | None, default=None)


@dataclass
class StreamChunk(Generic[T]):
    """A chunk of a streaming response from an LLM.

    Stream chunks represent incremental pieces of a response that are delivered
    as they are generated by the model, allowing for real-time display and processing.
    """

    content: ResponseContent
    """The content in this chunk of the response."""

    def format(self) -> T:
        """Format the content of this chunk.

        Returns:
            The formatted content of this chunk.
        """
        raise NotImplementedError()
