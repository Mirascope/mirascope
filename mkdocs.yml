copyright: Copyright &copy; 2023 Mirascope, Inc.
site_name: Mirascope
site_url: https://docs.mirascope.io/
site_description: Mirascope is an intuitive approach to building with LLMs.
repo_name: mirascope
repo_url: https://github.com/Mirascope/mirascope/
strict: true
theme:
  name: material
  custom_dir: docs/overrides
  icon:
    repo: fontawesome/brands/github
  features:
    - content.tabs.link
    - content.code.annotate
    - content.code.copy
    - content.code.link
    - navigation.footer
    - navigation.indexes
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top
    - search.highlight
    - search.suggest
    - toc.follow
  language: en
  palette:
    - scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
      primary: indigo
      accent: indigo
    - scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
      primary: indigo
      accent: indigo
  font:
    text: Roboto
    code: Roboto Mono
extra:
  version:
    provider: mike
  social:
    - icon: fontawesome/brands/github-alt
      link: https://github.com/mirascope
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/WilliamBakst
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/wbakst/
  analytics:
    provider: google
    property: G-DJHT1QG9GK

markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - admonition
  - pymdownx.arithmatex:
      generic: true
  - footnotes
  - pymdownx.details
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format ""
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.mark
  - attr_list
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.tasklist:
      custom_checkbox: true
  - toc:
      permalink: true

plugins:
  - mike:
      alias_type: symlink
      canonical_version: latest
  - search
  - mkdocstrings:
      handlers:
        python:
          paths: [.]
          options:
            members_order: source
            separate_signature: true
            filters: ["!^_"]
            show_root_heading: false
            show_root_toc_entry: false
            docstring_style: google
            docstring_options:
              ignore_init_summary: true
            merge_init_into_class: true
            show_signature_annotations: true
            signature_crossrefs: true
            show_symbol_type_heading: true
            show_symbol_type_toc: true
            extensions:
              - docs/plugins/griffe_doclinks.py
          import:
            - https://docs.python.org/3/objects.inv

extra_css:
  - "extra/tweaks.css"

validation:
  omitted_files: warn
  absolute_links: relative_to_docs
  unrecognized_links: warn
  not_found: warn

nav:
  - Get Started:
      - "index.md"
      - Why Use Mirascope: "WHY.md"
      - Help: "HELP.md"
      - Migration Guide: "MIGRATE.md"
      - Contributing: "CONTRIBUTING.md"
      - Changelog: "CHANGELOG.md"
  - Learn:
      - "learn/index.md"
      - Prompts: "learn/prompts.md"
      - Calls: "learn/calls.md"
      - Streams: "learn/streams.md"
      - Tools: "learn/tools.md"
      - Dynamic Configuration: "learn/dynamic_configuration.md"
      - Chaining: "learn/chaining.md"
      - JSON Mode: "learn/json_mode.md"
      - Response Models: "learn/response_models.md"
      - Output Parsers: "learn/output_parsers.md"
      - Async: "learn/async.md"
      - Evals: "learn/evals.md"
      - Agents: "learn/agents.md"
  - Cookbook:
      - "cookbook/index.md"
      - Text Classification: "cookbook/text_classification.md"
      - Text Summarization: "cookbook/text_summarization.md"
      - Search with Sources: "cookbook/search_with_sources.md"
      - LLM Validation With Retries: "cookbook/llm_validation_with_retries.md"
      - Extract from PDF: "cookbook/extract_from_pdf.md"
      - Knowledge Graph: "cookbook/knowledge_graph.md"
      - Generating Captions: "cookbook/generating_captions.md"
      - PII Scrubbing: "cookbook/pii_scrubbing.md"
      - Extraction using Vision: "cookbook/extraction_using_vision.md"
      - Code Generation and Execution: "cookbook/code_generation_and_execution.md"
      - Support Ticket Routing: "cookbook/support_ticket_routing.md"
      - Document Segmentation: "cookbook/document_segmentation.md"
      - Generating Synthetic Data: "cookbook/generating_synthetic_data.md"
      - Speech Transcription: "cookbook/speech_transcription.md"
      - Removing Semantic Duplicates: "cookbook/removing_semantic_duplicates.md"
      - Query Plan: "cookbook/query_plan.md"
      - Agents:
          - "cookbook/agents/index.md"
          - Web Search Agent: "cookbook/agents/web_search_agent.md"
          - Blog Writing Agent: "cookbook/agents/blog_writing_agent.md"
          - Generating SQL Agent: "cookbook/agents/generating_sql_agent.md"
          - Localized Agent: "cookbook/agents/localized_agent.md"
          - Local Chat with Codebase: "cookbook/agents/local_chat_with_codebase.md"
      - Prompt Engineering:
          - "cookbook/prompt_engineering/index.md"
          - Text Based:
              - "cookbook/prompt_engineering/text_based/index.md"
              - Self Ask: "cookbook/prompt_engineering/text_based/self_ask.md"
          - Chaining Based:
              - "cookbook/prompt_engineering/chaining_based/index.md"
              - System to Attention: "cookbook/prompt_engineering/chaining_based/system_to_attention.md"
              - Sym to M: "cookbook/prompt_engineering/chaining_based/sym_to_m.md"
              - Step Back: "cookbook/prompt_engineering/chaining_based/step_back.md"
              - Least to Most: "cookbook/prompt_engineering/chaining_based/least_to_most.md"
              - Decomposed Prompting: "cookbook/prompt_engineering/chaining_based/decomposed_prompting.md"
              - Skeleton of Thought: "cookbook/prompt_engineering/chaining_based/skeleton_of_thought.md"
              - Demonstration Ensembling: "cookbook/prompt_engineering/chaining_based/demonstration_ensembling.md"
              - Mixture of Reasoning: "cookbook/prompt_engineering/chaining_based/mixture_of_reasoning.md"
              - Self Consistency: "cookbook/prompt_engineering/chaining_based/self_consistency.md"
              - Prompt Paraphrasing: "cookbook/prompt_engineering/chaining_based/prompt_paraphrasing.md"
              - DiVeRSe: "cookbook/prompt_engineering/chaining_based/diverse.md"
              - Self Refine: "cookbook/prompt_engineering/chaining_based/self_refine.md"
              - Reverse Chain of Thought: "cookbook/prompt_engineering/chaining_based/reverse_chain_of_thought.md"
              - Self Verification: "cookbook/prompt_engineering/chaining_based/self_verification.md"
              - Chain of Verification: "cookbook/prompt_engineering/chaining_based/chain_of_verification.md"
  - Integrations:
      - "integrations/index.md"
      - Custom LLM Provider: "integrations/custom_provider.md"
      - HyperDX: "integrations/hyperdx.md"
      - Langfuse: "integrations/langfuse.md"
      - Logfire: "integrations/logfire.md"
      - Middleware: "integrations/middleware.md"
      - OpenTelemetry: "integrations/otel.md"
      - Tenacity: "integrations/tenacity.md"
  - API Reference:
      - "api/index.md"
      - Core:
          - "api/core/index.md"
          - Anthropic:
              - call: "api/core/anthropic/call.md"
              - call_params: "api/core/anthropic/call_params.md"
              - call_response: "api/core/anthropic/call_response.md"
              - call_response_chunk: "api/core/anthropic/call_response_chunk.md"
              - dynamic_config: "api/core/anthropic/dynamic_config.md"
              - stream: "api/core/anthropic/stream.md"
              - tool: "api/core/anthropic/tool.md"
          - Base:
              - call_factory: "api/core/base/call_factory.md"
              - call_params: "api/core/base/call_params.md"
              - call_response: "api/core/base/call_response.md"
              - call_response_chunk: "api/core/base/call_response_chunk.md"
              - dynamic_config: "api/core/base/dynamic_config.md"
              - message_param: "api/core/base/message_param.md"
              - metadata: "api/core/base/metadata.md"
              - prompt: "api/core/base/prompt.md"
              - stream: "api/core/base/stream.md"
              - structured_stream: "api/core/base/structured_stream.md"
              - tool: "api/core/base/tool.md"
              - toolkit: "api/core/base/toolkit.md"
          - Cohere:
              - call: "api/core/cohere/call.md"
              - call_params: "api/core/cohere/call_params.md"
              - call_response: "api/core/cohere/call_response.md"
              - call_response_chunk: "api/core/cohere/call_response_chunk.md"
              - dynamic_config: "api/core/cohere/dynamic_config.md"
              - stream: "api/core/cohere/stream.md"
              - tool: "api/core/cohere/tool.md"
          - Gemini:
              - call: "api/core/gemini/call.md"
              - call_params: "api/core/gemini/call_params.md"
              - call_response: "api/core/gemini/call_response.md"
              - call_response_chunk: "api/core/gemini/call_response_chunk.md"
              - dynamic_config: "api/core/gemini/dynamic_config.md"
              - stream: "api/core/gemini/stream.md"
              - tool: "api/core/gemini/tool.md"
          - Groq:
              - call: "api/core/groq/call.md"
              - call_params: "api/core/groq/call_params.md"
              - call_response: "api/core/groq/call_response.md"
              - call_response_chunk: "api/core/groq/call_response_chunk.md"
              - dynamic_config: "api/core/groq/dynamic_config.md"
              - stream: "api/core/groq/stream.md"
              - tool: "api/core/groq/tool.md"
          - LiteLLM:
              - call: "api/core/litellm/call.md"
          - Mistral:
              - call: "api/core/mistral/call.md"
              - call_params: "api/core/mistral/call_params.md"
              - call_response: "api/core/mistral/call_response.md"
              - call_response_chunk: "api/core/mistral/call_response_chunk.md"
              - dynamic_config: "api/core/mistral/dynamic_config.md"
              - stream: "api/core/mistral/stream.md"
              - tool: "api/core/mistral/tool.md"
          - OpenAI:
              - call: "api/core/openai/call.md"
              - call_params: "api/core/openai/call_params.md"
              - call_response: "api/core/openai/call_response.md"
              - call_response_chunk: "api/core/openai/call_response_chunk.md"
              - dynamic_config: "api/core/openai/dynamic_config.md"
              - stream: "api/core/openai/stream.md"
              - tool: "api/core/openai/tool.md"
      - Integrations:
          - "api/integrations/index.md"
          - Langfuse: "api/integrations/langfuse.md"
          - Logfire: "api/integrations/logfire.md"
          - Middleware: "api/integrations/middleware.md"
          - OpenTelemetry: "api/integrations/otel.md"
          - Tenacity: "api/integrations/tenacity.md"
