copyright: Copyright &copy; 2023 Mirascope, Inc.
site_name: Mirascope
site_url: https://docs.mirascope.io/
site_description: Mirascope is an intuitive approach to building with LLMs.
repo_name: mirascope
repo_url: https://github.com/Mirascope/mirascope/
theme:
  name: material
  custom_dir: docs/overrides
  icon:
    repo: fontawesome/brands/github
  features:
    - content.code.annotation
    - content.code.copy
    - content.code.link
    - navigation.footer
    - navigation.indexes
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top
    - search.highlight
    - search.suggest
    - toc.follow
  language: en
  palette:
    - scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
      primary: indigo
      accent: indigo
    - scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
      primary: indigo
      accent: indigo
  font:
    text: Roboto
    code: Roboto Mono
extra:
  version:
    provider: mike
  social:
    - icon: fontawesome/brands/github-alt
      link: https://github.com/mirascope
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/WilliamBakst
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/wbakst/
  analytics:
    provider: google
    property: G-DJHT1QG9GK

markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - admonition
  - pymdownx.arithmatex:
      generic: true
  - footnotes
  - pymdownx.details
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format ""
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.mark
  - attr_list
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.tasklist:
      custom_checkbox: true
  - toc:
      permalink: true

plugins:
  - mike:
      alias_type: symlink
      canonical_version: latest
  - search
  - mkdocstrings:
      handlers:
        python:
          options:
            show_root_heading: false
            docstring_style: google

nav:
  - Get Started:
      - Mirascope: "README.md"
      - Contributing: "CONTRIBUTING.md"
      - How to help: "HELP.md"
  - Concepts:
      - Philosophy: "concepts/philosophy.md"
      - Writing Prompts: "concepts/writing_prompts.md"
      - Generating content: "concepts/generating_content.md"
      - Streaming generated content: "concepts/streaming_generated_content.md"
      - Supported LLM providers: "concepts/supported_llm_providers.md"
      - Chat History: "concepts/chat_history.md"
      - Tools (Function Calling): "concepts/tools_(function_calling).md"
      - Defining tools (function calls): "concepts/defining_tools_(function_calls).md"
      - Extracting structured information using LLMs: "concepts/extracting_structured_information_using_llms.md"
      - Defining and extracting schemas: "concepts/defining_and_extracting_schemas.md"
      - Attaching and calling tool functions: "concepts/attaching_and_calling_tool_functions.md"
      - Streaming tools and structured outputs: "concepts/streaming_tools_and_structured_outputs.md"
      - Extracting base types: "concepts/extracting_base_types.md"
      - Validation: "concepts/validation.md"
      - RAG (Retrieval Augmented Generation): "concepts/rag_(retrieval_augmented_generation).md"
      - Dumping prompts and calls: "concepts/dumping_prompts_and_calls.md"
  - Integrations:
      - Client Wrappers: "integrations/client_wrappers.md"
      - FastAPI: "integrations/fastapi.md"
      - Logfire: "integrations/logfire.md"
      - Weights & Biases: "integrations/weights_and_biases.md"
      - LangChain & LangSmith: "integrations/langchain.md"
      - Llama Index: "integrations/llama_index.md"
  - Cookbook: "cookbook/index.md"
  - API Reference:
      - "api/index.md"
      - anthropic:
          - "api/anthropic/index.md"
          - calls: "api/anthropic/calls.md"
          - extractors: "api/anthropic/extractors.md"
          - tools: "api/anthropic/tools.md"
          - types: "api/anthropic/types.md"
      - base:
          - "api/base/index.md"
          - calls: "api/base/calls.md"
          - extractors: "api/base/extractors.md"
          - prompts: "api/base/prompts.md"
          - tools: "api/base/tools.md"
          - types: "api/base/types.md"
          - utils: "api/base/utils.md"
      - chroma:
          - "api/chroma/index.md"
          - types: "api/chroma/types.md"
          - vectorstores: "api/chroma/vectorstores.md"
      - cohere:
          - "api/cohere/index.md"
          - calls: "api/cohere/calls.md"
          - embedders: "api/cohere/embedders.md"
          - extractors: "api/cohere/extractors.md"
          - tools: "api/cohere/tools.md"
          - types: "api/cohere/types.md"
      - enums: "api/enums.md"
      - gemini:
          - "api/gemini/index.md"
          - calls: "api/gemini/calls.md"
          - extractors: "api/gemini/extractors.md"
          - tools: "api/gemini/tools.md"
          - types: "api/gemini/types.md"
      - logfire:
          - "api/logfire/index.md"
          - logfire: "api/logfire/logfire.md"
      - mistral:
          - "api/mistral/index.md"
          - calls: "api/mistral/calls.md"
          - extractors: "api/mistral/extractors.md"
          - tools: "api/mistral/tools.md"
          - types: "api/mistral/types.md"
      - openai:
          - "api/openai/index.md"
          - calls: "api/openai/calls.md"
          - embedders: "api/openai/embedders.md"
          - extractors: "api/openai/extractors.md"
          - tools: "api/openai/tools.md"
          - types: "api/openai/types.md"
      - pinecone:
          - "api/pinecone/index.md"
          - vectorstores: "api/pinecone/vectorstores.md"
          - types: "api/pinecone/types.md"
      - rag:
          - "api/rag/index.md"
          - embedders: "api/rag/embedders.md"
          - chunkers:
              - "api/rag/chunkers/index.md"
              - base_chunker: "api/rag/chunkers/base_chunker.md"
              - text_chunker: "api/rag/chunkers/text_chunker.md"
          - vectorstores: "api/rag/vectorstores.md"
      - wandb:
          - "api/wandb/index.md"
          - wandb: "api/wandb/wandb.md"
          - weave: "api/wandb/weave.md"
