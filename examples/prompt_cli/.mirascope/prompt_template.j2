{%- for item in order -%}
{%- if item.type == "comment" %}
"""{{ item.render }}"""
{%- elif item.type == "import" %}
import {{ item.render[0] }}{% if item.render[1] %} as {{ item.render[1] }}{% endif %}
{%- elif item.type == "from_import" %}
from {{ item.render[0] }} import {% if item.render[2] %}{{ item.render[1] }} as {{ item.render[2] }}{% else %}{{ item.render[1] }}{% endif %} 
{%- elif item.type == "variable" %}
{%- set var_name, var_value = item.render %}
{{ var_name }} = {{ var_value }}
{%- elif item.type == "class" %}
{%- set class = item.render -%}
{%- for decorator in class.decorators %}
@{{ decorator }}
{%- endfor %}
class {{ class.name }}({{ class.bases | join(', ') }}):
{%- if class.docstring %}
    """{{ class.docstring }}"""
{% endif %}

{%- for line in class.body.split('\n') %}
{%- if line.startswith('def ') or line.startswith('@') %}
        {%- if previous_line_was_function %}
    
        {%- endif %}
        {%- set previous_line_was_function = true %}
    {%- else %}
        {%- set previous_line_was_function = false %}
    {%- endif %}
    {{ line }}
{%- endfor %}
{%- elif item.type == "function" %}
{%- set function = item.render -%}
{%- for decorator in function.decorators %}
    @{{ decorator }}
{%- endfor %}
{% if function.is_async %}async {% endif %}def {{ function.name }}({{ function.args | join(', ') }}){% if function.returns %} -> {{ function.returns }}{% endif %}:
{%- if function.docstring %}
    """{{ function.docstring }}"""
{% endif %}
    {{ function.body | indent(8) }}
{%- endif -%}
{% endfor %}
