[tool.poetry]
name = "mirascope"
version = "0.10.0"
description = "LLM toolkit for lightning-fast, high-quality development"
license = "MIT"
authors = [
    "William Bakst <william@mirascope.io>",
    "Brendan Kao <brendan@mirascope.io>",
]
readme = "docs/README.md"
packages = [{ include = "mirascope" }]
repository = "https://github.com/Mirascope/mirascope"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
pydantic = "^2.0.2"
openai = "^1.6.0"
docstring-parser = "^0.15"

# A list of optional dependencies that are required for certain features
mirascope-cli = { version = ">=0.1.1,<1.0.0", optional = true }
wandb = { version = ">=0.16.4,<1.0.0", optional = true }
weave = { version = ">=0.50.0,<1.0.0", optional = true }
google-generativeai = { version = "^0.4.0", optional = true }
chromadb = { version = "^0.4.24", optional = true }
anthropic = { version = ">=0.23.1,<1.0.0", optional = true }
mistralai = { version = ">=0.1.6,<1.0.0", optional = true }
groq = { version = ">=0.4.2,<1.0.0", optional = true }
cohere = { version = "^5.2.5", optional = true }
pinecone-client = { version = "^3.2.2", optional = true }

[tool.poetry.extras]
astrapy = ["astrapy"]
cli = ["mirascope-cli"]
anthropic = ["anthropic"]
chromadb = ["chromadb"]
pinecone = ["pinecone-client"]
cohere = ["cohere"]
gemini = ["google-generativeai"]
groq = ["groq"]
mistral = ["mistralai"]
wandb = ["wandb"]
weave = ["weave"]
all = [
    "astrapy"
    "mirascope-cli",
    "anthropic",
    "chromadb",
    "wandb",
    "weave",
    "google-generativeai",
    "mistralai",
    "chromadb",
    "pinecone",
    "groq",
    "cohere",
]

[tool.poetry.group.dev.dependencies]
mypy = "^1.6.1"
pytest = "^7.4.0"
ruff = "^0.1.5"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"

[tool.poetry.group.docs.dependencies]
mike = "^2.0.0"
mkdocs = "^1.4.3"
mkdocs-material = "^9.1.18"
mkdocstrings = "^0.22.0"
mkdocstrings-python = "^1.1.2"

[tool.poetry.group.examples.dependencies]
fastapi = "^0.109.0"
pandas = "^2.2.0"
pandas-stubs = "^2.1.4.231227"
uvicorn = { extras = ["standard"], version = "^0.27.0" }
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.25"
psycopg2 = "^2.9.9"


[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 88
target-version = "py38"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
exclude = ["venv", "virtualenvs"]

[[tool.mypy.overrides]]
module = "mistralai"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "weave"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["pinecone.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
