"""Interfaces for LLM responses with context.

This module defines interfaces for the responses returned by language models that have
contextual information or data, such as the history of messages used to generate the
response.
"""

from collections.abc import Sequence
from dataclasses import dataclass
from typing import Generic

from typing_extensions import TypeVar

from ..tools import ContextTool
from ..types import Dataclass, Jsonable
from .base_response import BaseResponse
from .content import ResponseContent

DepsT = TypeVar("DepsT", default=None)
T = TypeVar("T", bound=Dataclass | None, default=None)


@dataclass
class ContextResponse(BaseResponse[ResponseContent, T], Generic[DepsT, T]):
    """The response generated by an LLM."""

    tools: Sequence[ContextTool[..., Jsonable, DepsT]]
    """The tools the LLM wants called on its behalf, if any."""

    @property
    def tool(self) -> ContextTool[..., Jsonable, DepsT] | None:
        """Returns the first tool used in the response, if any."""
        raise NotImplementedError()
